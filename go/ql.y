%{

//TODO Put your favorite license here
		
// yacc source generated by ebnf2y[1]
// at 2018-07-04 21:44:45.82778996 +0800 CST m=+0.001607667
//
//  $ /Users/xp/devspace/go/bin/ebnf2y -o ql.y -oe ql.ebnf -start selectStmt -pkg ql -p _ ql.ebnf
//
// CAUTION: If this file is a Go source file (*.go), it was generated
// automatically by '$ go tool yacc' from a *.y file - DO NOT EDIT in that case!
// 
//   [1]: http://github.com/cznic/ebnf2y

package ql //TODO real package name

//TODO required only be the demo _dump function
import (
	"bytes"
	"fmt"
	"strings"

	"github.com/cznic/strutil"
)

%}

%union {
	item interface{} //TODO insert real field(s)
}

%token	_SELECTSTMT

%type	<item> 	/*TODO real type(s), if/where applicable */
	_SELECTSTMT

%type	<item> 	/*TODO real type(s), if/where applicable */
	Start

/*TODO %left, %right, ... declarations */

%start Start

%%

Start:
	_SELECTSTMT
	{
		_parserResult = $1 //TODO 1
	}

%%

//TODO remove demo stuff below

var _parserResult interface{}

type (
	Start interface{}
)
	
func _dump() {
	s := fmt.Sprintf("%#v", _parserResult)
	s = strings.Replace(s, "%", "%%", -1)
	s = strings.Replace(s, "{", "{%i\n", -1)
	s = strings.Replace(s, "}", "%u\n}", -1)
	s = strings.Replace(s, ", ", ",\n", -1)
	var buf bytes.Buffer
	strutil.IndentFormatter(&buf, ". ").Format(s)
	buf.WriteString("\n")
	a := strings.Split(buf.String(), "\n")
	for _, v := range a {
		if strings.HasSuffix(v, "(nil)") || strings.HasSuffix(v, "(nil),") {
			continue
		}
	
		fmt.Println(v)
	}
}

// End of demo stuff
